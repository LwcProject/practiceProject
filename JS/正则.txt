1. ****正则表达式:
2. ***String中支持正则的API:

1. 正则表达式：规定字符串中字符出现规律的规则。
    何时使用：查找   验证   替换    切割
    模糊查找，验证字符串格式，模糊替换，按照一定规律切割字符串

   正则表达式语法：
     1. 最简单正则：关键字正文
     2. 备选字符集：字符串中某*一位*上可选的字符的集合
          [备选字符列表]
          强调：一个备选字符集，只能规定一位字符
          如果备选字符列表是(部分)连续的：用-省略中间字符
          仅表示*除别字符外*，所有字符均可：^除掉字符——了解
     3. 预定义字符集：对常用字符集的简写方式
          \d：1位数字 [0-9]
          \w: 1位数字，字母或下划线 [0-9a-zA-Z_]
          \s: 1位空字符：空格 tab 回车换行

          .: 1位任意字符，除回车换行外
        预定义字符集 vs 自定义字符集
        预定义字符集语法简单，规则是固定的，不可变！
        自定义字符集，规则完全自定义，灵活！语法繁琐

     4. 数量词：规定一个字符集出现次数的量词
        如何使用：紧跟字符集之后，修改相邻的前一个字符集
            1. 确定数量：3种：
               {m,n} 最少m个，最多n个
               {m,}  m个以上
               {m}   必须m个
            2. 不确定数量：3种：
                ?: 可有可无，最多一个
                *: 可有可无，多了不限
                +: 至少一个，多了不限
     5. 选择和分组：
        分组： (子表达式)
        选择：或   表达式1|表达式2

        手机号：+86或0086 可有可无，最多一个
                空字符 可有可无，多了不限
                1
                3,4,5,7,8 选其一
                9位数字，不能多，不能少
        (\+86|0086)?\s*1[34578]\d{9}
        身份证号：15位数字 
                  2位数字 
		  从数字、x、X中选一个
		  后两部分整体可有可无，最多一次
        \d{15}(\d\d[0-9xX])?
        匹配img元素：<img xxxx src="" xxxx  />
         <img 1位以上任意字符 src= 在'"间选一个 1位以上任意字符 在'"间选一个 1位以上任意字符 />
        贪婪模式：默认匹配最长的字符 
            比如: .*  .+
        懒惰模式：仅匹配最短的字符
            贪婪改懒惰：.*=>(.*?) .+==>(.+?)
        <img(.+?)src=['"](.+?)['"](.+?)/>

    6. 指定匹配位置：
       ^：开头位置的xxx，专用在表达式开头
       $：结尾位置的xxx，专用在表达式结尾
       比如：^\s+ 匹配开始位置的所有空字符
	     \s+$ 匹配结尾位置的所有空字符
             ^\s+|\s+$ 匹配开头或结尾的空字符
       前加^后加$(不带|):表示从头到尾完整匹配
         今后只要验证格式，都要前加^，后加$ 
       比如：验证密码：6位数字：^\d{6}$

       \b:单词边界，每个单词前或后，必须有空字符分割——了解
	
       预判：在正式匹配前，使用特定条件先预检查一次字符串
             如果预判都未通过，则不再匹配
       6位以上字母，数字的组合，至少包含一位大写字母和一位数字
	1. 预判：不都由小写字母或数字组成
                 结论：可能包含大写字母，特殊符号
           (?![a-z0-9]+$)
        2. 预判：不都由大写字母或小写字母组成
                 结论：可能包含数字，特殊符号
           (?![A-Za-z]+$)
        3. 6位以上字母，数字的组合(排除特殊字符)
                 结论：肯定包含大写字母和数字
           [a-zA-Z0-9]{8}
        (?![a-z0-9]+$)(?![A-Za-z]+$)[a-zA-Z0-9]{8}

      补充：汉字的备选字符集:[\u4e00-\u9fa5]

2. String中支持正则的API：
    1. 查找：4种：
       1. var i=str.indexOf/lastIndexOf("敏感词"[,fromi])
          缺点：不支持正则表达式，每次只能找一个敏感词
          优点：可指定开始查找的位置
          何时使用：敏感词固定时，且仅获得位置时
       2. var i=str.search(/正则表达式/)——不支持后缀g
          缺：仅查找*第一个*和正则表达式匹配的关键词
              仅返回关键词第一个字符的位置下标
              如果没找到，返回-1.
              无法返回关键词内容。
          优：支持正则
          何时使用: 需要使用正则表达式查找关键字时，且只判断有没有。
       3. var arr=str.match(/正则表达式/g)
          缺：可返回所有匹配关键词的内容，
              无法获得每个关键词的位置。
          优：找到所有关键词
          默认正则表达式只匹配一个关键词
          表达式后+g,让表达式匹配所有关键词
          ***找不到，返回null!
		都要先判断不是null，再调用属性或方法
       4. 即可获得关键字内容，又可获得位置：reg.exec（待续）

    2. 替换：var newStr=str.replace(/正则表达式/g,"替换内容")


0-100 一位小数点   /^(\d|[1-9]\d|100)(\.\d{1})?$/   后面这样就是两位小数点，修改1后的数字改变小数位  /^(\d|[1-9]\d|100)(\.\d{1, 2})?$/ 

大于等于0 两位小数点 /^(?:[1-9]\d*|0)(?:\.\d{1,2})?$/

包括 0 的整数，没有小数点 /^[+]{0,1}(\d+)$/

0-1 最多一位小数  /^0\.[0-9]{1}$|^0{1}$|^1{1}$|^1\.[0]{1}$/
       





















    
   
